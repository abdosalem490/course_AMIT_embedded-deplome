#include<util/delay.h>

#include "STD_TYPES.h"
#include "BTT_MATH.h"
#include "ERR_TYPE.h"

#include "PORT_interface.h"

#include "DIO_interface.h"

#include "SSD_interface.h"
#include "CLCD_interface.h"
#include "LED_interface.h"
#include "Switch_interface.h"

void MAIN_voidSetDisplay(uint8 Copy_u8FirstOperand , uint8 Copy_u8SecondOperand ,uint8 Copy_u8Operator , uint32 Copy_u8Result,uint8 Copy_u8NegativeFlag,uint8 Copy_u8RemainderOfDecimal)
{
	CLCD_voidClearDisplay();
	CLCD_sendNumebr(Copy_u8FirstOperand);
	CLCD_voidSendData(' ');
	CLCD_voidSendData(Copy_u8Operator);
	CLCD_voidSendData(' ');
	CLCD_sendNumebr(Copy_u8SecondOperand);
	CLCD_voidSendData(' ');
	CLCD_voidSendData('=');
	CLCD_voidSendData(' ');
	if(Copy_u8NegativeFlag == 1)
		CLCD_voidSendData('-');
	CLCD_sendNumebr(Copy_u8Result);
	if(Copy_u8RemainderOfDecimal != 0)
	{
		CLCD_voidSendData('.');
		CLCD_sendNumebr(Copy_u8RemainderOfDecimal);
	}
}

uint8 MAIN_u32GetResult(uint8 Copy_u8FirstOperand , uint8 Copy_u8SecondOperand ,uint8 Copy_u8Operator,uint32* Copy_u8Result,uint8* Copy_u8NegativeFlag,uint8* Copy_u8RemainderOfDecimal)
{
	switch(Copy_u8Operator)
	{
		case '+':
			*Copy_u8Result = Copy_u8FirstOperand + Copy_u8SecondOperand;
			break;
		case '-':
			if(Copy_u8SecondOperand > Copy_u8FirstOperand)
			{
				*Copy_u8NegativeFlag = 1;
				*Copy_u8Result = Copy_u8SecondOperand - Copy_u8FirstOperand;
			}
			else
			{
				*Copy_u8NegativeFlag = 0;
				*Copy_u8Result = Copy_u8FirstOperand - Copy_u8SecondOperand;
			}

			break;
		case '*':
			*Copy_u8Result = Copy_u8FirstOperand * Copy_u8SecondOperand;
			break;
		case '/':
			if(Copy_u8SecondOperand == 0)
				return 1;
			else
			{
				*Copy_u8Result =  Copy_u8FirstOperand / Copy_u8SecondOperand;
				*Copy_u8RemainderOfDecimal = ((100 * Copy_u8FirstOperand) / Copy_u8SecondOperand)%100;
			}
			break;
	}
	return 0;
}
int main(){

	PORT_voidInit();
	CLCD_voidInit();

	uint8 Local_u8FirstOperand = 0;
	uint8 Local_u8SecondOperand = 0;
	uint8 Local_u8Operator = '+';
	uint32 Local_u8Result = 0;
	uint8 Local_u8Operatorindex = 0;
	uint8 Copy_u8NegativeFlag = 0;
	uint8 Local_u8Remaider = 0;

	uint8 Local_u8Index = 0;

	SW_Config_t Local_u8Switch0 = {DIO_u8_PORTB,DIO_u8_PIN0,DIO_u8_PULL_DOWN};
	SW_Config_t Local_u8Switch1 = {DIO_u8_PORTD,DIO_u8_PIN6,DIO_u8_PULL_DOWN};
	SW_Config_t Local_u8Switch2 = {DIO_u8_PORTD,DIO_u8_PIN2,DIO_u8_PULL_DOWN};

	uint8 Local_u8IsSwitch0Pressed = 0;
	uint8 Local_u8IsSwitch1Pressed = 0;
	uint8 Local_u8IsSwitch2Pressed = 0;

	uint8 Local_u8Arrow[8] = {0B00000100,0B00001110,0B00001110,0B00010101,0B00010101,0B00000100,0B00000100,0B00000100};
	uint8 Local_u8Operators[] = {'+','-','*','/'};

	MAIN_voidSetDisplay(Local_u8FirstOperand,Local_u8SecondOperand,Local_u8Operator,Local_u8Result,Copy_u8NegativeFlag,Local_u8Remaider);
	CLCD_voidSendSpecialChatacter(Local_u8Arrow,0,Local_u8Index,1);
	while(1)
	{
		_delay_ms(100);
		SW_u8GetState(&Local_u8Switch0,&Local_u8IsSwitch0Pressed);
		SW_u8GetState(&Local_u8Switch1,&Local_u8IsSwitch1Pressed);
		SW_u8GetState(&Local_u8Switch2,&Local_u8IsSwitch2Pressed);

		if(Local_u8IsSwitch0Pressed == 1)
		{
			if(Local_u8Index == 4)
			{
				 if(MAIN_u32GetResult(Local_u8FirstOperand,Local_u8SecondOperand,Local_u8Operator,&Local_u8Result,&Copy_u8NegativeFlag,&Local_u8Remaider) == 1)
				 {
					 CLCD_voidClearDisplay();
					 CLCD_sendNumebr(Local_u8FirstOperand);
					 CLCD_voidSendData(' ');
					 CLCD_voidSendData(Local_u8Operator);
					 CLCD_voidSendData(' ');
					 CLCD_sendNumebr(Local_u8SecondOperand);
					 CLCD_voidSendData(' ');
				   	 CLCD_voidSendData('=');
					 CLCD_voidSendData(' ');
					 CLCD_sendString("ERR");
				 }
				 else
				 {
					 Local_u8Index = 0;
					MAIN_voidSetDisplay(Local_u8FirstOperand,Local_u8SecondOperand,Local_u8Operator,Local_u8Result,Copy_u8NegativeFlag,Local_u8Remaider);
					CLCD_voidSendSpecialChatacter(Local_u8Arrow,0,Local_u8Index,1);
				 }
			}
			else
			{
				Local_u8Index += 2;
				MAIN_voidSetDisplay(Local_u8FirstOperand,Local_u8SecondOperand,Local_u8Operator,Local_u8Result,Copy_u8NegativeFlag,Local_u8Remaider);
				CLCD_voidSendSpecialChatacter(Local_u8Arrow,0,Local_u8Index,1);
			}

		}
		else if(Local_u8IsSwitch1Pressed == 1)
		{
			if(Local_u8Index == 0)
			{
				Local_u8FirstOperand--;
			}
			else if(Local_u8Index == 2)
			{
				Local_u8Operatorindex = Local_u8Operatorindex == 0 ? 3 : Local_u8Operatorindex -1;
				Local_u8Operator = Local_u8Operators[Local_u8Operatorindex];
			}
			else if(Local_u8Index == 4)
			{
				Local_u8SecondOperand--;
			}
			MAIN_voidSetDisplay(Local_u8FirstOperand,Local_u8SecondOperand,Local_u8Operator,Local_u8Result,Copy_u8NegativeFlag,Local_u8Remaider);
			CLCD_voidSendSpecialChatacter(Local_u8Arrow,0,Local_u8Index,1);
		}
		else if(Local_u8IsSwitch2Pressed == 1)
		{
			if(Local_u8Index == 0)
			{
				Local_u8FirstOperand++;
			}
			else if(Local_u8Index == 2)
			{
				Local_u8Operatorindex = (Local_u8Operatorindex+1) % 4;
				Local_u8Operator = Local_u8Operators[Local_u8Operatorindex];
			}
			else if(Local_u8Index == 4)
			{
				Local_u8SecondOperand++;
			}
			MAIN_voidSetDisplay(Local_u8FirstOperand,Local_u8SecondOperand,Local_u8Operator,Local_u8Result,Copy_u8NegativeFlag,Local_u8Remaider);
			CLCD_voidSendSpecialChatacter(Local_u8Arrow,0,Local_u8Index,1);
		}

	}
	return 0;
}